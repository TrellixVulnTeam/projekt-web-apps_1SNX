{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\projekt-web-apps\\\\backend\",\"filename\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projekt-web-apps\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\projekt-web-apps\\backend",
      "filename": "C:\\projekt-web-apps\\backend\\src\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\projekt-web-apps\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projekt-web-apps\\backend\\src\\index.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projekt-web-apps\\backend\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
        "sourceFileName": "index.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _db = _interopRequireDefault(require(\"./db.js\"));\n\nvar _cors = _interopRequireDefault(require(\"cors\"));\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _auth = _interopRequireDefault(require(\"./auth\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_dotenv[\"default\"].config();\n\nvar Cart = require('./cartLogic');\n\nvar app = (0, _express[\"default\"])();\nvar port = 3007;\napp.use(_express[\"default\"].json());\nvar corsOptions = {\n  credentials: true\n};\napp.use((0, _cors[\"default\"])(corsOptions));\napp.set(\"trust proxy\", 1);\n/* --------- Autentifikacija --------- */\n\napp.post('/korisnici', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    var UserData, id;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            UserData = req.body;\n            _context.prev = 1;\n            _context.next = 4;\n            return _auth[\"default\"].registerUser(UserData);\n\n          case 4:\n            id = _context.sent;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](1);\n            res.status(500).json({\n              error: _context.t0.message\n            });\n\n          case 10:\n            res.json({\n              id: id\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 7]]);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/korisnici', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(req, res) {\n    var db, cursor, finalData;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context2.sent;\n            _context2.next = 5;\n            return db.collection(\"korisnik\").find({});\n\n          case 5:\n            cursor = _context2.sent;\n            _context2.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            finalData = _context2.sent;\n            res.json(finalData);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/secret', [_auth[\"default\"].verify], function (req, res) {\n  res.json({\n    message: 'Tajna ruta, vaš email: ' + req.jwt.Email\n  });\n});\napp.post('/auth', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(req, res) {\n    var user, finalData;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return req.body;\n\n          case 2:\n            user = _context3.sent;\n            _context3.prev = 3;\n            _context3.next = 6;\n            return _auth[\"default\"].authenticateUser(user.Email, user.Lozinka);\n\n          case 6:\n            finalData = _context3.sent;\n            res.json(finalData);\n            _context3.next = 13;\n            break;\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](3);\n            res.status(401).json({\n              error: _context3.t0.message\n            });\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[3, 10]]);\n  }));\n\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\n/* --------- Proizvodi --------- */\n\napp.post('/proizvodi', /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(req, res) {\n    var db, proizvodi, result;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context4.sent;\n            proizvodi = req.body;\n            _context4.next = 6;\n            return db.collection('proizvodi').insertOne(proizvodi);\n\n          case 6:\n            result = _context4.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n            console.log(result);\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.get('/proizvodi', /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(req, res) {\n    var db, query, selektiraj, pretraga, pojmovi, pojam, cursor, results;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context5.sent;\n            query = req.query;\n            selektiraj = {};\n\n            if (query.naziv) {\n              selektiraj.naziv = new RegExp(query.naziv);\n              console.log(query.naziv);\n            }\n\n            if (query._any) {\n              pretraga = query._any;\n              pojmovi = pretraga.split(' ');\n              selektiraj = {\n                $and: []\n              };\n              pojmovi.forEach(function (pojam) {\n                selektiraj.$and.push({\n                  naziv: new RegExp(pojam)\n                });\n              });\n            }\n\n            pojam = query._any;\n            console.log(_typeof(query._any), query._any);\n            _context5.next = 11;\n            return db.collection('proizvodi').find({\n              naziv: {\n                $regex: \"\".concat(pojam),\n                $options: \"i\"\n              }\n            }, selektiraj);\n\n          case 11:\n            cursor = _context5.sent;\n            _context5.next = 14;\n            return cursor.toArray();\n\n          case 14:\n            results = _context5.sent;\n            res.json(results);\n\n          case 16:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.get('/svi_proizvodi', /*#__PURE__*/function () {\n  var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(req, res) {\n    var db, cursor, products;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context6.sent;\n            _context6.next = 5;\n            return db.collection('proizvodi').find({});\n\n          case 5:\n            cursor = _context6.sent;\n            _context6.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            products = _context6.sent;\n            console.log(products);\n            res.json(products);\n\n          case 11:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function (_x11, _x12) {\n    return _ref6.apply(this, arguments);\n  };\n}());\napp.get('/proizvodi/:naziv', /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(req, res) {\n    var nazivProizvoda, db, singleDoc;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            nazivProizvoda = req.params.naziv;\n            _context7.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context7.sent;\n            _context7.next = 6;\n            return db.collection('proizvodi').findOne({\n              naziv: nazivProizvoda\n            });\n\n          case 6:\n            singleDoc = _context7.sent;\n            console.log(singleDoc);\n            res.json(singleDoc);\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function (_x13, _x14) {\n    return _ref7.apply(this, arguments);\n  };\n}());\napp.get('/proizvodi/kategorija/:vrste', /*#__PURE__*/function () {\n  var _ref8 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(req, res) {\n    var vrsteProizvoda, db, singleDoc, results;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            vrsteProizvoda = req.params.vrste;\n            _context8.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context8.sent;\n            console.log(\"Vrste: \", vrsteProizvoda);\n            _context8.next = 7;\n            return db.collection('proizvodi').find({\n              vrste: vrsteProizvoda\n            });\n\n          case 7:\n            singleDoc = _context8.sent;\n            _context8.next = 10;\n            return singleDoc.toArray();\n\n          case 10:\n            results = _context8.sent;\n            res.json(results);\n\n          case 12:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n\n  return function (_x15, _x16) {\n    return _ref8.apply(this, arguments);\n  };\n}());\napp.get('/proizvodi/brisi/:naziv', /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(req, res) {\n    var nazivProizvoda, db, result;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            nazivProizvoda = req.params.naziv;\n            _context9.next = 3;\n            return (0, _db[\"default\"])();\n\n          case 3:\n            db = _context9.sent;\n            _context9.next = 6;\n            return db.collection('proizvodi').deleteOne({\n              naziv: nazivProizvoda\n            });\n\n          case 6:\n            result = _context9.sent;\n\n            if (result && result.deletedCount == 1) {\n              res.json(result);\n            } else {\n              res.json({\n                status: \"fail\"\n              });\n            }\n\n            res.json(result);\n\n          case 9:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n\n  return function (_x17, _x18) {\n    return _ref9.apply(this, arguments);\n  };\n}());\n/* --------- Košarica --------- */\n\napp.post(\"/dodaj_u_kosaricu/:naziv\", /*#__PURE__*/function () {\n  var _ref10 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(req, res) {\n    var _jwt$cart;\n\n    var db, cursor, finalData, naziv, jednoPice, cart;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context10.sent;\n            _context10.next = 5;\n            return db.collection(\"proizvodi\").find({});\n\n          case 5:\n            cursor = _context10.sent;\n            _context10.next = 8;\n            return cursor.toArray();\n\n          case 8:\n            finalData = _context10.sent;\n            naziv = req.params.naziv;\n            _context10.next = 12;\n            return finalData.find(function (proizvod) {\n              return proizvod.naziv === naziv;\n            });\n\n          case 12:\n            jednoPice = _context10.sent;\n            cart = new Cart((_jwt$cart = _jsonwebtoken[\"default\"].cart) !== null && _jwt$cart !== void 0 ? _jwt$cart : {});\n            cart.dodajPice(jednoPice);\n            _jsonwebtoken[\"default\"].cart = JSON.parse(JSON.stringify(cart)); //console.log(cart);\n\n            res.send(cart);\n\n          case 17:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10);\n  }));\n\n  return function (_x19, _x20) {\n    return _ref10.apply(this, arguments);\n  };\n}());\napp.get(\"/dohvati_kosaricu\", /*#__PURE__*/function () {\n  var _ref11 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(req, res) {\n    var trenutnaKosarica;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            trenutnaKosarica = _jsonwebtoken[\"default\"];\n            console.log(trenutnaKosarica.cart);\n            res.json(trenutnaKosarica);\n\n          case 3:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n\n  return function (_x21, _x22) {\n    return _ref11.apply(this, arguments);\n  };\n}());\n/* --------- Plaćanje --------- */\n\napp.post(\"/placanje\", /*#__PURE__*/function () {\n  var _ref12 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(req, res) {\n    var db, payment, result;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.next = 2;\n            return (0, _db[\"default\"])();\n\n          case 2:\n            db = _context12.sent;\n            payment = req.body;\n            _context12.next = 6;\n            return db.collection('placanje').insertOne(payment);\n\n          case 6:\n            result = _context12.sent;\n\n            if (result.insertedCount == 1) {\n              res.send({\n                status: 'success',\n                id: result.insertedId\n              });\n            } else {\n              res.send({\n                status: 'fail'\n              });\n            }\n\n          case 8:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12);\n  }));\n\n  return function (_x23, _x24) {\n    return _ref12.apply(this, arguments);\n  };\n}());\napp.listen(port, function () {\n  return console.log(\"Slu\\u0161am na portu \".concat(port, \"!\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "dotenv",
        "config",
        "Cart",
        "require",
        "app",
        "port",
        "use",
        "express",
        "json",
        "corsOptions",
        "credentials",
        "set",
        "post",
        "req",
        "res",
        "UserData",
        "body",
        "auth",
        "registerUser",
        "id",
        "status",
        "error",
        "message",
        "get",
        "db",
        "collection",
        "find",
        "cursor",
        "toArray",
        "finalData",
        "verify",
        "jwt",
        "Email",
        "user",
        "authenticateUser",
        "Lozinka",
        "proizvodi",
        "insertOne",
        "result",
        "insertedCount",
        "send",
        "insertedId",
        "console",
        "log",
        "query",
        "selektiraj",
        "naziv",
        "RegExp",
        "_any",
        "pretraga",
        "pojmovi",
        "split",
        "$and",
        "forEach",
        "pojam",
        "push",
        "$regex",
        "$options",
        "results",
        "products",
        "nazivProizvoda",
        "params",
        "findOne",
        "singleDoc",
        "vrsteProizvoda",
        "vrste",
        "deleteOne",
        "deletedCount",
        "proizvod",
        "jednoPice",
        "cart",
        "dodajPice",
        "JSON",
        "parse",
        "stringify",
        "trenutnaKosarica",
        "payment",
        "listen"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "sourcesContent": [
        "import dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\nimport express from 'express';\r\nimport connect from './db.js';\r\nimport cors from 'cors';\r\nimport mongo from 'mongodb';\r\nimport auth from './auth';\r\nimport jwt from 'jsonwebtoken';\r\nlet Cart = require ('./cartLogic');\r\n\r\nconst app = express() \r\nconst port = 3007 \r\napp.use(express.json());\r\n\r\n  var corsOptions = {\r\n    credentials: true\r\n  }\r\napp.use(cors((corsOptions)));\r\n\r\napp.set(\"trust proxy\", 1)\r\n\r\n\r\n/* --------- Autentifikacija --------- */\r\n\r\napp.post('/korisnici', async (req, res) => {\r\n    let UserData = req.body;\r\n\r\n    let id;\r\n\r\n    try {\r\n        id = await auth.registerUser(UserData);\r\n    } catch (e) {\r\n        res.status(500).json({ error: e.message });\r\n    }\r\n\r\n    res.json({ id:id });\r\n});\r\n\r\napp.get('/korisnici', async (req,res) => {\r\n    let db = await connect()\r\n    \r\n    let cursor = await db.collection(\"korisnik\").find({})\r\n    let finalData = await cursor.toArray();\r\n    \r\n    res.json(finalData);\r\n});\r\n\r\napp.get('/secret', [auth.verify], (req, res) => {\r\n    res.json({ message: 'Tajna ruta, vaš email: ' + req.jwt.Email });\r\n});\r\n\r\napp.post('/auth', async (req, res) => {\r\n    let user = await req.body;\r\n    try {\r\n        let finalData = await auth.authenticateUser(user.Email, user.Lozinka);\r\n        res.json(finalData);\r\n    }\r\n    catch(e) {\r\n        res.status(401).json({ error: e.message })\r\n    }\r\n});\r\n\r\n/* --------- Proizvodi --------- */\r\n\r\napp.post ('/proizvodi', async (req , res) => {\r\n    let db = await connect();\r\n    let  proizvodi = req.body;\r\n\r\n    let result = await db.collection('proizvodi').insertOne(proizvodi);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n    console.log(result);\r\n});\r\n\r\napp.get('/proizvodi', async (req , res) => {\r\n    let db = await connect();\r\n    let query = req.query;\r\n    let selektiraj = {}\r\n    \r\n    if(query.naziv){\r\n        selektiraj.naziv = new RegExp(query.naziv)\r\n        console.log(query.naziv)\r\n    }\r\n\r\n    if(query._any) {\r\n        \r\n        let pretraga = query._any;\r\n        let pojmovi = pretraga.split(' ');\r\n        selektiraj = {\r\n            $and: [],\r\n        };\r\n    \r\n        pojmovi.forEach((pojam) => {\r\n            selektiraj.$and.push({naziv: new RegExp(pojam)});\r\n        });\r\n    }\r\n    \r\n    let pojam = query._any\r\n    console.log(typeof(query._any),query._any)\r\n    let cursor = await db.collection('proizvodi').find({naziv:{$regex: `${pojam}` ,$options: \"i\"}},selektiraj);\r\n    let results = await cursor.toArray();\r\n\r\n    res.json(results)\r\n    \r\n   \r\n});\r\n\r\napp.get('/svi_proizvodi', async (req , res) => {\r\n    let db = await connect();\r\n    let cursor = await db.collection('proizvodi').find({})\r\n    let products = await cursor.toArray();\r\n\r\n    console.log(products)\r\n    res.json(products)\r\n});\r\n\r\n\r\napp.get('/proizvodi/:naziv', async (req , res) => {\r\n    let nazivProizvoda = req.params.naziv;\r\n    let db = await connect();\r\n    let singleDoc = await db.collection('proizvodi').findOne({naziv: nazivProizvoda})\r\n\r\n    console.log(singleDoc)\r\n    res.json(singleDoc)\r\n});\r\n\r\napp.get('/proizvodi/kategorija/:vrste', async (req , res) => {\r\n    let vrsteProizvoda = req.params.vrste;\r\n    let db = await connect();\r\n\r\n    console.log(\"Vrste: \",vrsteProizvoda)\r\n    let singleDoc = await db.collection('proizvodi').find({vrste: vrsteProizvoda})\r\n    let results = await singleDoc.toArray();\r\n    \r\n   \r\n    res.json(results)\r\n});\r\n\r\napp.get('/proizvodi/brisi/:naziv', async (req , res) => {\r\n    let nazivProizvoda = req.params.naziv;\r\n    let db = await connect();\r\n\r\n    let result = await db.collection('proizvodi').deleteOne({ naziv: nazivProizvoda });\r\n\r\n\tif (result && result.deletedCount == 1) {\r\n\t\tres.json(result);\r\n\t} else {\r\n\t\tres.json({\r\n\t\t\tstatus: \"fail\",\r\n\t\t});\r\n\t}\r\n   \r\n    res.json(result)\r\n});\r\n/* --------- Košarica --------- */\r\n\r\napp.post(\"/dodaj_u_kosaricu/:naziv\", async (req, res) => {\r\n\r\n    let db = await connect();\r\n    let cursor = await db.collection(\"proizvodi\").find({})\r\n    let finalData = await cursor.toArray();\r\n\r\n    const naziv = req.params.naziv;\r\n\r\n    const jednoPice = await finalData.find((proizvod) => proizvod.naziv === naziv);\r\n    \r\n    const cart = new Cart(jwt.cart ?? {}); \r\n    \r\n    cart.dodajPice(jednoPice);\r\n    jwt.cart = JSON.parse(JSON.stringify(cart));\r\n    //console.log(cart);\r\n\r\n\r\n    res.send(cart);\r\n});  \r\n\r\napp.get(\"/dohvati_kosaricu\",async (req, res) => {\r\n    let trenutnaKosarica = jwt;\r\n    console.log(trenutnaKosarica.cart)\r\n    res.json(trenutnaKosarica);\r\n});\r\n\r\n/* --------- Plaćanje --------- */\r\n\r\napp.post(\"/placanje\",async (req, res) => {\r\n    let db = await connect();\r\n    let payment = req.body;\r\n\r\n    let result = await db.collection('placanje').insertOne(payment);\r\n    if (result.insertedCount == 1) {\r\n        res.send({\r\n            status: 'success',\r\n            id: result.insertedId,\r\n        });\r\n    } \r\n    else {\r\n        res.send({\r\n            status: 'fail',\r\n        });\r\n    }\r\n    \r\n});\r\n\r\n\r\napp.listen(port, () => console.log(`Slušam na portu ${port}!`))"
      ]
    },
    "sourceType": "script",
    "mtime": 1662725821732
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\projekt-web-apps\\\\backend\",\"filename\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\db.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projekt-web-apps\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\projekt-web-apps\\backend",
      "filename": "C:\\projekt-web-apps\\backend\\src\\db.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\projekt-web-apps\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projekt-web-apps\\backend\\src\\db.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projekt-web-apps\\backend\\src\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
        "sourceFileName": "db.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _require = require('mongodb'),\n    MongoClient = _require.MongoClient;\n\nvar connection_string = 'mongodb+srv://alkoshop:admin@cluster0.iclwo.mongodb.net/?retryWrites=true&w=majority';\nvar client = new MongoClient(connection_string, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\nvar db = null;\n\nvar _default = function _default() {\n  return new Promise(function (resolve, reject) {\n    if (db) {\n      resolve(db);\n    }\n\n    client.connect(function (err) {\n      if (err) {\n        reject(\"Error: \" + err);\n      } else {\n        console.log(\"Sucess\");\n        db = client.db(\"AlkoShop\");\n        resolve(db);\n      }\n    });\n  });\n};\n\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJNb25nb0NsaWVudCIsImNvbm5lY3Rpb25fc3RyaW5nIiwiY2xpZW50IiwidXNlTmV3VXJsUGFyc2VyIiwidXNlVW5pZmllZFRvcG9sb2d5IiwiZGIiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsImNvbm5lY3QiLCJlcnIiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0EsZUFBd0JBLE9BQU8sQ0FBQyxTQUFELENBQS9CO0FBQUEsSUFBUUMsV0FBUixZQUFRQSxXQUFSOztBQUNBLElBQUlDLGlCQUFpQixHQUFFLHNGQUF2QjtBQUVBLElBQUlDLE1BQU0sR0FBRyxJQUFJRixXQUFKLENBQWdCQyxpQkFBaEIsRUFBbUM7QUFDNUNFLEVBQUFBLGVBQWUsRUFBRSxJQUQyQjtBQUU1Q0MsRUFBQUEsa0JBQWtCLEVBQUU7QUFGd0IsQ0FBbkMsQ0FBYjtBQUlBLElBQUlDLEVBQUUsR0FBRyxJQUFUOztlQUVlLG9CQUFNO0FBQ2pCLFNBQU8sSUFBSUMsT0FBSixDQUFZLFVBQUNDLE9BQUQsRUFBVUMsTUFBVixFQUFvQjtBQUVuQyxRQUFJSCxFQUFKLEVBQU87QUFDSEUsTUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDs7QUFDREgsSUFBQUEsTUFBTSxDQUFDTyxPQUFQLENBQWUsVUFBQUMsR0FBRyxFQUFJO0FBQ2xCLFVBQUdBLEdBQUgsRUFBTztBQUNIRixRQUFBQSxNQUFNLENBQUMsWUFBWUUsR0FBYixDQUFOO0FBQ0gsT0FGRCxNQUdJO0FBQ0FDLFFBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFFBQVo7QUFDQVAsUUFBQUEsRUFBRSxHQUFHSCxNQUFNLENBQUNHLEVBQVAsQ0FBVSxVQUFWLENBQUw7QUFDQUUsUUFBQUEsT0FBTyxDQUFDRixFQUFELENBQVA7QUFDSDtBQUNKLEtBVEQ7QUFVSCxHQWZNLENBQVA7QUFnQkgsQyIsInNvdXJjZVJvb3QiOiJDOlxccHJvamVrdC13ZWItYXBwc1xcYmFja2VuZFxcc3JjXFwiLCJzb3VyY2VzQ29udGVudCI6WyJcbmNvbnN0IHsgTW9uZ29DbGllbnQgfSA9IHJlcXVpcmUoJ21vbmdvZGInKTtcbmxldCBjb25uZWN0aW9uX3N0cmluZz0gJ21vbmdvZGIrc3J2Oi8vYWxrb3Nob3A6YWRtaW5AY2x1c3RlcjAuaWNsd28ubW9uZ29kYi5uZXQvP3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eSdcblxubGV0IGNsaWVudCA9IG5ldyBNb25nb0NsaWVudChjb25uZWN0aW9uX3N0cmluZywge1xuICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcbiAgICB1c2VVbmlmaWVkVG9wb2xvZ3k6IHRydWVcbn0pO1xubGV0IGRiID0gbnVsbFxuXG5leHBvcnQgZGVmYXVsdCAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+e1xuXG4gICAgICAgIGlmIChkYil7XG4gICAgICAgICAgICByZXNvbHZlKGRiKVxuICAgICAgICB9XG4gICAgICAgIGNsaWVudC5jb25uZWN0KGVyciA9PiB7XG4gICAgICAgICAgICBpZihlcnIpe1xuICAgICAgICAgICAgICAgIHJlamVjdChcIkVycm9yOiBcIiArIGVycilcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2V7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTdWNlc3NcIilcbiAgICAgICAgICAgICAgICBkYiA9IGNsaWVudC5kYihcIkFsa29TaG9wXCIpXG4gICAgICAgICAgICAgICAgcmVzb2x2ZShkYilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KVxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "require",
        "MongoClient",
        "connection_string",
        "client",
        "useNewUrlParser",
        "useUnifiedTopology",
        "db",
        "Promise",
        "resolve",
        "reject",
        "connect",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AACA,eAAwBA,OAAO,CAAC,SAAD,CAA/B;AAAA,IAAQC,WAAR,YAAQA,WAAR;;AACA,IAAIC,iBAAiB,GAAE,sFAAvB;AAEA,IAAIC,MAAM,GAAG,IAAIF,WAAJ,CAAgBC,iBAAhB,EAAmC;AAC5CE,EAAAA,eAAe,EAAE,IAD2B;AAE5CC,EAAAA,kBAAkB,EAAE;AAFwB,CAAnC,CAAb;AAIA,IAAIC,EAAE,GAAG,IAAT;;eAEe,oBAAM;AACjB,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAEnC,QAAIH,EAAJ,EAAO;AACHE,MAAAA,OAAO,CAACF,EAAD,CAAP;AACH;;AACDH,IAAAA,MAAM,CAACO,OAAP,CAAe,UAAAC,GAAG,EAAI;AAClB,UAAGA,GAAH,EAAO;AACHF,QAAAA,MAAM,CAAC,YAAYE,GAAb,CAAN;AACH,OAFD,MAGI;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAP,QAAAA,EAAE,GAAGH,MAAM,CAACG,EAAP,CAAU,UAAV,CAAL;AACAE,QAAAA,OAAO,CAACF,EAAD,CAAP;AACH;AACJ,KATD;AAUH,GAfM,CAAP;AAgBH,C",
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "sourcesContent": [
        "\nconst { MongoClient } = require('mongodb');\nlet connection_string= 'mongodb+srv://alkoshop:admin@cluster0.iclwo.mongodb.net/?retryWrites=true&w=majority'\n\nlet client = new MongoClient(connection_string, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n});\nlet db = null\n\nexport default () => {\n    return new Promise((resolve, reject) =>{\n\n        if (db){\n            resolve(db)\n        }\n        client.connect(err => {\n            if(err){\n                reject(\"Error: \" + err)\n            }\n            else{\n                console.log(\"Sucess\")\n                db = client.db(\"AlkoShop\")\n                resolve(db)\n            }\n        })\n    })\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1662080879262
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\projekt-web-apps\\\\backend\",\"filename\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projekt-web-apps\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\projekt-web-apps\\backend",
      "filename": "C:\\projekt-web-apps\\backend\\src\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\projekt-web-apps\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projekt-web-apps\\backend\\src\\auth.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projekt-web-apps\\backend\\src\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
        "sourceFileName": "auth.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _mongodb = _interopRequireDefault(require(\"mongodb\"));\n\nvar _db = _interopRequireDefault(require(\"./db\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n  var db;\n  return regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return (0, _db[\"default\"])();\n\n        case 2:\n          db = _context.sent;\n          _context.next = 5;\n          return db.collection('korisnik').createIndex({\n            Email: 1\n          }, {\n            unique: true\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}))();\n\nvar _default = {\n  registerUser: function registerUser(user) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var db, doc, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context2.sent;\n              _context2.t0 = user.Ime_i_prezime;\n              _context2.t1 = user.Email;\n              _context2.next = 7;\n              return _bcrypt[\"default\"].hash(user.Lozinka, 8);\n\n            case 7:\n              _context2.t2 = _context2.sent;\n              doc = {\n                Ime_i_prezime: _context2.t0,\n                Email: _context2.t1,\n                Lozinka: _context2.t2\n              };\n              _context2.prev = 9;\n              _context2.next = 12;\n              return db.collection('korisnik').insertOne(doc);\n\n            case 12:\n              result = _context2.sent;\n\n              if (!(result && result.insertedId)) {\n                _context2.next = 15;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", result.insertedId);\n\n            case 15:\n              _context2.next = 21;\n              break;\n\n            case 17:\n              _context2.prev = 17;\n              _context2.t3 = _context2[\"catch\"](9);\n\n              if (!(_context2.t3.name == 'MongoError' || _context2.t3.code == 11000)) {\n                _context2.next = 21;\n                break;\n              }\n\n              throw new Error('Korisnik već postoji');\n\n            case 21:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[9, 17]]);\n    }))();\n  },\n  authenticateUser: function authenticateUser(Email, Lozinka) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n      var db, userData, token;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return (0, _db[\"default\"])();\n\n            case 2:\n              db = _context3.sent;\n              _context3.next = 5;\n              return db.collection('korisnik').findOne({\n                Email: Email\n              });\n\n            case 5:\n              userData = _context3.sent;\n              _context3.t0 = userData && userData.Lozinka;\n\n              if (!_context3.t0) {\n                _context3.next = 11;\n                break;\n              }\n\n              _context3.next = 10;\n              return _bcrypt[\"default\"].compare(Lozinka, userData.Lozinka);\n\n            case 10:\n              _context3.t0 = _context3.sent;\n\n            case 11:\n              if (!_context3.t0) {\n                _context3.next = 17;\n                break;\n              }\n\n              delete userData.Lozinka;\n              token = _jsonwebtoken[\"default\"].sign(userData, process.env.JWT_SECRET, {\n                algorithm: 'HS512',\n                expiresIn: '2 weeks'\n              });\n              return _context3.abrupt(\"return\", {\n                token: token,\n                Email: userData.Email\n              });\n\n            case 17:\n              throw new Error('Cannot authenticate');\n\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  verify: function verify(req, res, next) {\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n      var authorization, type, token;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return req.headers.authorization.split(' ');\n\n            case 3:\n              authorization = _context4.sent;\n              type = authorization[0];\n              token = authorization[1];\n\n              if (!(type !== 'Bearer')) {\n                _context4.next = 10;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", res.status(401).send());\n\n            case 10:\n              req.jwt = _jsonwebtoken[\"default\"].verify(token, process.env.JWT_SECRET);\n              return _context4.abrupt(\"return\", next());\n\n            case 12:\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](0);\n              return _context4.abrupt(\"return\", res.status(401).send());\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 14]]);\n    }))();\n  }\n};\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiZGIiLCJjb2xsZWN0aW9uIiwiY3JlYXRlSW5kZXgiLCJFbWFpbCIsInVuaXF1ZSIsInJlZ2lzdGVyVXNlciIsInVzZXIiLCJJbWVfaV9wcmV6aW1lIiwiYmNyeXB0IiwiaGFzaCIsIkxvemlua2EiLCJkb2MiLCJpbnNlcnRPbmUiLCJyZXN1bHQiLCJpbnNlcnRlZElkIiwibmFtZSIsImNvZGUiLCJFcnJvciIsImF1dGhlbnRpY2F0ZVVzZXIiLCJmaW5kT25lIiwidXNlckRhdGEiLCJjb21wYXJlIiwidG9rZW4iLCJqd3QiLCJzaWduIiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJhbGdvcml0aG0iLCJleHBpcmVzSW4iLCJ2ZXJpZnkiLCJyZXEiLCJyZXMiLCJuZXh0IiwiaGVhZGVycyIsImF1dGhvcml6YXRpb24iLCJzcGxpdCIsInR5cGUiLCJzdGF0dXMiLCJzZW5kIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBRUEsd0RBQUM7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFDa0IscUJBRGxCOztBQUFBO0FBQ09BLFVBQUFBLEVBRFA7QUFBQTtBQUFBLGlCQUVTQSxFQUFFLENBQUNDLFVBQUgsQ0FBYyxVQUFkLEVBQTBCQyxXQUExQixDQUFzQztBQUFFQyxZQUFBQSxLQUFLLEVBQUU7QUFBVCxXQUF0QyxFQUFvRDtBQUFFQyxZQUFBQSxNQUFNLEVBQUU7QUFBVixXQUFwRCxDQUZUOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLENBQUQ7O2VBS2U7QUFDTEMsRUFBQUEsWUFESyx3QkFDUUMsSUFEUixFQUNjO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxxQkFDTixxQkFETTs7QUFBQTtBQUNqQk4sY0FBQUEsRUFEaUI7QUFBQSw2QkFJRk0sSUFBSSxDQUFDQyxhQUpIO0FBQUEsNkJBS1ZELElB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QVVBLHlCQUFJTyxNQUFKLENBQVdSLEtBQVgsRUFBa0JHLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxVQUE5QixDQUFWO0FBVGlCLGdEQVdWTSxJQUFJLEVBWE07O0FBQUE7QUFBQTtBQUFBOztBQUFBO0FBQUE7QUFBQTtBQUFBLGdEQWVkRCxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixFQWZjOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBaUI1QjtBQTNEVSxDIiwic291cmNlUm9vdCI6IkM6XFxwcm9qZWt0LXdlYi1hcHBzXFxiYWNrZW5kXFxzcmNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nbyBmcm9tICdtb25nb2RiJztcclxuaW1wb3J0IGNvbm5lY3QgZnJvbSAnLi9kYic7XHJcbmltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0JztcclxuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xyXG5cclxuKGFzeW5jICgpID0+IHtcclxuICAgIGxldCBkYiA9IGF3YWl0IGNvbm5lY3QoKTtcclxuICAgIGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2tvcmlzbmlrJykuY3JlYXRlSW5kZXgoeyBFbWFpbDogMSB9LCB7IHVuaXF1ZTogdHJ1ZSB9KTtcclxufSkoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIGFzeW5jIHJlZ2lzdGVyVXNlcih1c2VyKSB7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xyXG5cclxuICAgICAgICBsZXQgZG9jID0ge1xyXG4gICAgICAgICAgICBJbWVfaV9wcmV6aW1lOiB1c2VyLkltZV9pX3ByZXppbWUsXHJcbiAgICAgICAgICAgIEVtYWlsOiB1c2VyLkVtYWlsLFxyXG4gICAgICAgICAgICBMb3ppbmthOiBhd2FpdCBiY3J5cHQuaGFzaCh1c2VyLkxvemlua2EsIDgpLFxyXG4gICAgICAgIH1cclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBhd2FpdCBkYi5jb2xsZWN0aW9uKCdrb3Jpc25paycpLmluc2VydE9uZShkb2MpO1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC5pbnNlcnRlZElkKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQuaW5zZXJ0ZWRJZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2goZSl7XHJcbiAgICAgICAgICAgIGlmKGUubmFtZSA9PSAnTW9uZ29FcnJvcicgfHwgZS5jb2RlID09IDExMDAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0tvcmlzbmlrIHZlxIcgcG9zdG9qaScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSxcclxuXHJcbiAgICBhc3luYyBhdXRoZW50aWNhdGVVc2VyKEVtYWlsLCBMb3ppbmthKSB7XHJcbiAgICAgICAgbGV0IGRiID0gYXdhaXQgY29ubmVjdCgpO1xyXG4gICAgICAgIGxldCB1c2VyRGF0YSA9IGF3YWl0IGRiLmNvbGxlY3Rpb24oJ2tvcmlzbmlrJykuZmluZE9uZSh7IEVtYWlsOiBFbWFpbCB9KVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmICh1c2VyRGF0YSAmJiB1c2VyRGF0YS5Mb3ppbmthICYmIChhd2FpdCBiY3J5cHQuY29tcGFyZShMb3ppbmthLCB1c2VyRGF0YS5Mb3ppbmthKSkpe1xyXG4gICAgICAgICAgICBkZWxldGUgdXNlckRhdGEuTG96aW5rYVxyXG4gICAgICAgICAgICBsZXQgdG9rZW4gPSBqd3Quc2lnbih1c2VyRGF0YSwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCwge1xyXG4gICAgICAgICAgICAgICAgYWxnb3JpdGhtOiAnSFM1MTInLFxyXG4gICAgICAgICAgICAgICAgZXhwaXJlc0luOiAnMiB3ZWVrcydcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICB0b2tlbixcclxuICAgICAgICAgICAgICAgIEVtYWlsOiB1c2VyRGF0YS5FbWFpbFxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgYXV0aGVudGljYXRlJylcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG4gICAgYXN5bmMgdmVyaWZ5KHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgbGV0IGF1dGhvcml6YXRpb24gPSBhd2FpdCByZXEuaGVhZGVycy5hdXRob3JpemF0aW9uLnNwbGl0KCcgJyk7XHJcbiAgICAgICAgICAgIGxldCB0eXBlID0gYXV0aG9yaXphdGlvblswXTtcclxuICAgICAgICAgICAgbGV0IHRva2VuID0gYXV0aG9yaXphdGlvblsxXTtcclxuICAgICAgICAgICAgaWYgKHR5cGUgIT09ICdCZWFyZXInKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgcmVxLmp3dCA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV4dCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuc2VuZCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "db",
        "collection",
        "createIndex",
        "Email",
        "unique",
        "registerUser",
        "user",
        "Ime_i_prezime",
        "bcrypt",
        "hash",
        "Lozinka",
        "doc",
        "insertOne",
        "result",
        "insertedId",
        "name",
        "code",
        "Error",
        "authenticateUser",
        "findOne",
        "userData",
        "compare",
        "token",
        "jwt",
        "sign",
        "process",
        "env",
        "JWT_SECRET",
        "algorithm",
        "expiresIn",
        "verify",
        "req",
        "res",
        "next",
        "headers",
        "authorization",
        "split",
        "type",
        "status",
        "send"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "sourcesContent": [
        "import mongo from 'mongodb';\r\nimport connect from './db';\r\nimport bcrypt from 'bcrypt';\r\nimport jwt from 'jsonwebtoken';\r\n\r\n(async () => {\r\n    let db = await connect();\r\n    await db.collection('korisnik').createIndex({ Email: 1 }, { unique: true });\r\n})();\r\n\r\nexport default {\r\n    async registerUser(user) {\r\n        let db = await connect();\r\n\r\n        let doc = {\r\n            Ime_i_prezime: user.Ime_i_prezime,\r\n            Email: user.Email,\r\n            Lozinka: await bcrypt.hash(user.Lozinka, 8),\r\n        }\r\n        try{\r\n            let result = await db.collection('korisnik').insertOne(doc);\r\n            if (result && result.insertedId){\r\n                return result.insertedId;\r\n            }\r\n        } catch(e){\r\n            if(e.name == 'MongoError' || e.code == 11000) {\r\n                throw new Error('Korisnik već postoji');\r\n            }\r\n        }\r\n    },\r\n\r\n    async authenticateUser(Email, Lozinka) {\r\n        let db = await connect();\r\n        let userData = await db.collection('korisnik').findOne({ Email: Email })\r\n        \r\n        if (userData && userData.Lozinka && (await bcrypt.compare(Lozinka, userData.Lozinka))){\r\n            delete userData.Lozinka\r\n            let token = jwt.sign(userData, process.env.JWT_SECRET, {\r\n                algorithm: 'HS512',\r\n                expiresIn: '2 weeks'\r\n            })\r\n            \r\n            return {\r\n                token,\r\n                Email: userData.Email\r\n            }\r\n\r\n        }\r\n        else {\r\n            throw new Error('Cannot authenticate')\r\n        }\r\n    },\r\n    async verify(req, res, next) {\r\n        try {\r\n            let authorization = await req.headers.authorization.split(' ');\r\n            let type = authorization[0];\r\n            let token = authorization[1];\r\n            if (type !== 'Bearer') {\r\n                return res.status(401).send();\r\n            }\r\n            else{\r\n                req.jwt = jwt.verify(token, process.env.JWT_SECRET);\r\n                \r\n                return next();\r\n            }\r\n        }\r\n        catch (e) {\r\n            return res.status(401).send();\r\n        }\r\n    }\r\n\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1662080879169
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\projekt-web-apps\\\\backend\",\"filename\":\"C:\\\\projekt-web-apps\\\\backend\\\\src\\\\cartLogic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\projekt-web-apps\\\\backend\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.14.6": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\projekt-web-apps\\backend",
      "filename": "C:\\projekt-web-apps\\backend\\src\\cartLogic.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\projekt-web-apps\\backend",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\projekt-web-apps\\backend\\src\\cartLogic.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\projekt-web-apps\\backend\\src\\cartLogic.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
        "sourceFileName": "cartLogic.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function Cart(prijasnjaKosarica) {\n  this.proizvodi = prijasnjaKosarica.proizvodi || {};\n  this.ukupnaKol = prijasnjaKosarica.ukupnaKol || 0;\n  this.ukupnaCijena = prijasnjaKosarica.ukupnaCijena || 0.00;\n\n  this.dodajPice = function (proizvod) {\n    var spremiProizvod = this.proizvodi;\n\n    if (!spremiProizvod.hasOwnProperty(\"proizvod\")) {\n      spremiProizvod = this.proizvodi = {\n        proizvod: proizvod\n      };\n      this.ukupnaKol = 1;\n      this.ukupnaCijena = parseFloat(proizvod.cijena);\n    } else {\n      spremiProizvod = {\n        proizvod: proizvod\n      };\n      this.proizvodi = spremiProizvod;\n      spremiProizvod.cijena = parseFloat(spremiProizvod.proizvod.cijena * spremiProizvod.kolicinaTrenutnogPr);\n      this.ukupnaKol++;\n      this.ukupnaCijena += parseFloat(spremiProizvod.proizvod.cijena);\n    }\n  };\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhcnRMb2dpYy5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiQ2FydCIsInByaWphc25qYUtvc2FyaWNhIiwicHJvaXp2b2RpIiwidWt1cG5hS29sIiwidWt1cG5hQ2lqZW5hIiwiZG9kYWpQaWNlIiwicHJvaXp2b2QiLCJzcHJlbWlQcm9penZvZCIsImhhc093blByb3BlcnR5IiwicGFyc2VGbG9hdCIsImNpamVuYSIsImtvbGljaW5hVHJlbnV0bm9nUHIiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixTQUFTQyxJQUFULENBQWNDLGlCQUFkLEVBQWlDO0FBQzlDLE9BQUtDLFNBQUwsR0FBaUJELGlCQUFpQixDQUFDQyxTQUFsQixJQUErQixFQUFoRDtBQUNBLE9BQUtDLFNBQUwsR0FBaUJGLGlCQUFpQixDQUFDRSxTQUFsQixJQUErQixDQUFoRDtBQUNBLE9BQUtDLFlBQUwsR0FBb0JILGlCQUFpQixDQUFDRyxZQUFsQixJQUFrQyxJQUF0RDs7QUFFQSxPQUFLQyxTQUFMLEdBQWlCLFVBQVNDLFFBQVQsRUFBbUI7QUFDbEMsUUFBSUMsY0FBYyxHQUFHLEtBQUtMLFNBQTFCOztBQUNBLFFBQUksQ0FBQ0ssY0FBYyxDQUFDQyxjQUFmLENBQThCLFVBQTlCLENBQUwsRUFBZ0Q7QUFFOUNELE1BQUFBLGNBQWMsR0FBRyxLQUFLTCxTQUFMLEdBQWlCO0FBQUNJLFFBQUFBLFFBQVEsRUFBRUE7QUFBWCxPQUFsQztBQUNBLFdBQUtILFNBQUwsR0FBaUIsQ0FBakI7QUFDQSxXQUFLQyxZQUFMLEdBQW9CSyxVQUFVLENBQUNILFFBQVEsQ0FBQ0ksTUFBVixDQUE5QjtBQUVELEtBTkQsTUFNTztBQUNISCxNQUFBQSxjQUFjLEdBQUc7QUFBQ0QsUUFBQUEsUUFBUSxFQUFFQTtBQUFYLE9BQWpCO0FBQ0EsV0FBS0osU0FBTCxHQUFpQkssY0FBakI7QUFDQUEsTUFBQUEsY0FBYyxDQUFDRyxNQUFmLEdBQXdCRCxVQUFVLENBQUNGLGNBQWMsQ0FBQ0QsUUFBZixDQUF3QkksTUFBeEIsR0FBaUNILGNBQWMsQ0FBQ0ksbUJBQWpELENBQWxDO0FBRUYsV0FBS1IsU0FBTDtBQUNBLFdBQUtDLFlBQUwsSUFBcUJLLFVBQVUsQ0FBQ0YsY0FBYyxDQUFDRCxRQUFmLENBQXdCSSxNQUF6QixDQUEvQjtBQUNEO0FBQ0YsR0FoQkQ7QUFpQkQsQ0F0QkgiLCJzb3VyY2VSb290IjoiQzpcXHByb2pla3Qtd2ViLWFwcHNcXGJhY2tlbmRcXHNyY1xcIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBDYXJ0KHByaWphc25qYUtvc2FyaWNhKSB7XHJcbiAgICB0aGlzLnByb2l6dm9kaSA9IHByaWphc25qYUtvc2FyaWNhLnByb2l6dm9kaSB8fCB7fTtcclxuICAgIHRoaXMudWt1cG5hS29sID0gcHJpamFzbmphS29zYXJpY2EudWt1cG5hS29sIHx8IDA7XHJcbiAgICB0aGlzLnVrdXBuYUNpamVuYSA9IHByaWphc25qYUtvc2FyaWNhLnVrdXBuYUNpamVuYSB8fCAwLjAwO1xyXG4gIFxyXG4gICAgdGhpcy5kb2RhalBpY2UgPSBmdW5jdGlvbihwcm9penZvZCkge1xyXG4gICAgICBsZXQgc3ByZW1pUHJvaXp2b2QgPSB0aGlzLnByb2l6dm9kaTtcclxuICAgICAgaWYgKCFzcHJlbWlQcm9penZvZC5oYXNPd25Qcm9wZXJ0eShcInByb2l6dm9kXCIpKSB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgc3ByZW1pUHJvaXp2b2QgPSB0aGlzLnByb2l6dm9kaSA9IHtwcm9penZvZDogcHJvaXp2b2R9O1xyXG4gICAgICAgIHRoaXMudWt1cG5hS29sID0gMTtcclxuICAgICAgICB0aGlzLnVrdXBuYUNpamVuYSA9IHBhcnNlRmxvYXQocHJvaXp2b2QuY2lqZW5hKTtcclxuICBcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHNwcmVtaVByb2l6dm9kID0ge3Byb2l6dm9kOiBwcm9penZvZH07XHJcbiAgICAgICAgICB0aGlzLnByb2l6dm9kaSA9IHNwcmVtaVByb2l6dm9kO1xyXG4gICAgICAgICAgc3ByZW1pUHJvaXp2b2QuY2lqZW5hID0gcGFyc2VGbG9hdChzcHJlbWlQcm9penZvZC5wcm9penZvZC5jaWplbmEgKiBzcHJlbWlQcm9penZvZC5rb2xpY2luYVRyZW51dG5vZ1ByKTtcclxuICAgICAgXHJcbiAgICAgICAgdGhpcy51a3VwbmFLb2wrKztcclxuICAgICAgICB0aGlzLnVrdXBuYUNpamVuYSArPSBwYXJzZUZsb2F0KHNwcmVtaVByb2l6dm9kLnByb2l6dm9kLmNpamVuYSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgIl19",
    "map": {
      "version": 3,
      "sources": [
        "cartLogic.js"
      ],
      "names": [
        "module",
        "exports",
        "Cart",
        "prijasnjaKosarica",
        "proizvodi",
        "ukupnaKol",
        "ukupnaCijena",
        "dodajPice",
        "proizvod",
        "spremiProizvod",
        "hasOwnProperty",
        "parseFloat",
        "cijena",
        "kolicinaTrenutnogPr"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,iBAAd,EAAiC;AAC9C,OAAKC,SAAL,GAAiBD,iBAAiB,CAACC,SAAlB,IAA+B,EAAhD;AACA,OAAKC,SAAL,GAAiBF,iBAAiB,CAACE,SAAlB,IAA+B,CAAhD;AACA,OAAKC,YAAL,GAAoBH,iBAAiB,CAACG,YAAlB,IAAkC,IAAtD;;AAEA,OAAKC,SAAL,GAAiB,UAASC,QAAT,EAAmB;AAClC,QAAIC,cAAc,GAAG,KAAKL,SAA1B;;AACA,QAAI,CAACK,cAAc,CAACC,cAAf,CAA8B,UAA9B,CAAL,EAAgD;AAE9CD,MAAAA,cAAc,GAAG,KAAKL,SAAL,GAAiB;AAACI,QAAAA,QAAQ,EAAEA;AAAX,OAAlC;AACA,WAAKH,SAAL,GAAiB,CAAjB;AACA,WAAKC,YAAL,GAAoBK,UAAU,CAACH,QAAQ,CAACI,MAAV,CAA9B;AAED,KAND,MAMO;AACHH,MAAAA,cAAc,GAAG;AAACD,QAAAA,QAAQ,EAAEA;AAAX,OAAjB;AACA,WAAKJ,SAAL,GAAiBK,cAAjB;AACAA,MAAAA,cAAc,CAACG,MAAf,GAAwBD,UAAU,CAACF,cAAc,CAACD,QAAf,CAAwBI,MAAxB,GAAiCH,cAAc,CAACI,mBAAjD,CAAlC;AAEF,WAAKR,SAAL;AACA,WAAKC,YAAL,IAAqBK,UAAU,CAACF,cAAc,CAACD,QAAf,CAAwBI,MAAzB,CAA/B;AACD;AACF,GAhBD;AAiBD,CAtBH",
      "sourceRoot": "C:\\projekt-web-apps\\backend\\src\\",
      "sourcesContent": [
        "module.exports = function Cart(prijasnjaKosarica) {\r\n    this.proizvodi = prijasnjaKosarica.proizvodi || {};\r\n    this.ukupnaKol = prijasnjaKosarica.ukupnaKol || 0;\r\n    this.ukupnaCijena = prijasnjaKosarica.ukupnaCijena || 0.00;\r\n  \r\n    this.dodajPice = function(proizvod) {\r\n      let spremiProizvod = this.proizvodi;\r\n      if (!spremiProizvod.hasOwnProperty(\"proizvod\")) {\r\n        \r\n        spremiProizvod = this.proizvodi = {proizvod: proizvod};\r\n        this.ukupnaKol = 1;\r\n        this.ukupnaCijena = parseFloat(proizvod.cijena);\r\n  \r\n      } else {\r\n          spremiProizvod = {proizvod: proizvod};\r\n          this.proizvodi = spremiProizvod;\r\n          spremiProizvod.cijena = parseFloat(spremiProizvod.proizvod.cijena * spremiProizvod.kolicinaTrenutnogPr);\r\n      \r\n        this.ukupnaKol++;\r\n        this.ukupnaCijena += parseFloat(spremiProizvod.proizvod.cijena);\r\n      }\r\n    }\r\n  }\r\n  "
      ]
    },
    "sourceType": "script",
    "mtime": 1662080879216
  }
}